@model WebMVC.Models.BattleMapTransViewModel
@using BackgroundLogic.InputOutput

@{
    ViewBag.Title = "Battle Mapa";
    int w = Model.StateData.Width;
    int h = Model.StateData.Height;
    int r_size = 50;
}

<span id="r_size">@r_size</span>


<div id="battle-map-board" style="position:relative; width:@(w*r_size)px; height:@(h*r_size)px; border-bottom: 1px solid black; border-left: 1px solid black;">

    <img src="@Url.Action("GetBackground", new { path = (FileIO.GetProgDataPath(Model.StateData.BackgroundPath)) })" style="width:100%;height:100%" />


    <!--KÓŁKA-->
    @if (Model.StateData.MovingId != 0)
    {
        for (int i = 0; i < Model.FullInitiative.Count; i++)
        {
            if (Model.FullInitiative[i].Id == Model.StateData.MovingId)
            {
                <div style="
                            border:1px dashed red;
                            border-radius:@(r_size*6.5)px;
                            position:absolute;
                            left:@(Model.FullInitiative[i].PositionX*r_size-r_size*6)px;
                            bottom:@(Model.FullInitiative[i].PositionY*r_size-r_size*6)px;
                            width: @(r_size*13)px;
                            height: @(r_size*13)px;
                            ">
                </div>
                <div style="
                            border:1px dashed red;
                            border-radius:@(r_size*12.5)px;
                            position:absolute;
                            left:@(Model.FullInitiative[i].PositionX*r_size-r_size*12)px;
                            bottom:@(Model.FullInitiative[i].PositionY*r_size-r_size*12)px;
                            width: @(r_size*25)px;
                            height: @(r_size*25)px;
                            ">
                </div>
            }
        }
    }

    <!--KRATKI-->
    <div id="grid-div">
        @for (int x = 0; x < w; x++)
        {
            for (int y = 0; y < h; y++)
            {
                <a @(Model.StateData.MovingId != 0 ? $"href=../BattleMap/Move/{y * w + x}" : "")>
                    <div style="
                            position: absolute;
                            left:   @(x*r_size)px;
                            bottom: @(y*r_size)px;
                            width:  @(r_size)px;
                            height: @(r_size)px;
                            border-top: 1px solid black;
                            border-right: 1px solid black;
                            "
                         class="board-cell"
                         pos_x="@x"
                         pos_y="@y">
                    </div>
                </a>
            }
        }
    </div>

    <!--STWORZENIA-->
    <div id="creatures-div">
        @for (int id = 0; id < Model.FullInitiative.Count(); id++)
        {
            <a @(Model.StateData.MovingId != 0 ? $"data-toggle=modal data-target=#dmgModal onclick=dmgModalSetup({Model.FullInitiative[id].Id})" : $"href=../BattleMap/SetToMove/{Model.FullInitiative[id].Id}")
               onclick="breakSyncConnection()">
                <div style="
                             position: absolute;
                             left:   @((Model.FullInitiative[id].PositionX)*(r_size))px;
                             bottom: @((Model.FullInitiative[id].PositionY)*(r_size))px;
                             width:  @(r_size)px;
                             height: @(r_size)px;
                             @(id == Model.StateData.Turn ? "border:2px solid #e67300;" : "")
                             @(Model.FullInitiative[id].HP==0 ? "border:5px solid red;" : "")
                             "
                     class="board-cell"
                     pos_x="@Model.FullInitiative[id].PositionX"
                     pos_y="@Model.FullInitiative[id].PositionY">

                    <img src="@Url.Action("GetImg", new { path = (FileIO.GetProgDataPath(Model.FullInitiative[id].ImagePath)), type = (Model.FullInitiative[id].CreatureType) })"
                         style="width:100%; height:100%"
                         data-toggle="tooltip"
                         data-placement="top"
                         title=@(Model.FullInitiative[id].Name)>

                </div>
            </a>
        }
    </div>

    <div style="position:absolute;top:0px;left:0px;">
        @Html.Partial("~/Views/BattleMap/BattleMapInitiativePartial.cshtml", Model)
    </div>



</div>

<style>
    .body-content {
        padding: 0px;
    }
</style>

@section Scripts
{
    @Scripts.Render("~/Scripts/BattleMapMenagement.js")
}


<!--Modal dodawanie tła-->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Dodaj tło</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddBackground",
                        "BattleMap",
                        FormMethod.Post,
                        new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken();

                    <div>
                        <table class="table">
                            <tr>
                                <th scope="row">Szerokość w kratkach</th>
                                <td><input id="Xkratek" name="Width" type="number" value="" style="max-width: 300px; width: 300px;" /></td>
                            </tr>
                            <tr>
                                <th scope="row">Wysokość w kratkach</th>
                                <td><input id="Ykratek" name="Height" type="number" value="" style="max-width: 300px; width: 300px;" /></td>
                            </tr>
                            <tr>
                                <th scope="row">Dodaj obraz</th>
                                <td><input id="Upload-File-Button" type="file" onchange="requestSaveImg()" /></td>
                                <td hidden> <input type="text" id="FilePath-Field" name="FilePath" value="" /></td>
                            </tr>
                            <tr>
                                <th scope="row"></th>
                                <td><input type="submit" value="Dodaj" class="btn btn-primary" id="Submit-Button" /></td>
                            </tr>

                        </table>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>


<!--Modal zadawanie obrarzeń-->
<div class="modal fade" id="dmgModal" tabindex="-1" role="dialog" aria-labelledby="dmgModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="dmgModalLabel">Zadane obrażenia</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("DmgCreature",
                        "BattleMap",
                        FormMethod.Post,
                        new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken();

                    <div>
                        <table class="table">
                            <tr>
                                <th scope="row">Podaj obrażenia</th>
                                <td><input id="Dmg" name="Dmg" type="number" value="" style="max-width: 300px; width: 300px;" /></td>
                            </tr>
                            <tr hidden>
                                <td><input id="DmgCreatureId" name="DmgCreatureId" type="number" value="" /></td>
                            </tr>
                            <tr>
                                <th scope="row"></th>
                                <td><input type="submit" value="Zadaj" class="btn btn-primary" id="Submit-Button" /></td>
                            </tr>
                        </table>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>